name: Publish

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Setup nodejs'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - name: 'Setup pnpm'
        uses: pnpm/action-setup@v4
        with:
          run_install: |
            - recursive: false
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: 'install'
        run: pnpm install
      - name: 'Publish to npm'
        run: |
          NPM_PACKAGE_NAME=$(node -p "require('./package.json').name")
          NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version")
          NPM_PACKAGE_BETA_TAG="beta"
          NPM_PACKAGE_ALPHA_TAG="alpha"
          NPM_PACKAGE_TAG="latest"
          if [[ $NPM_PACKAGE_VERSION =~ $NPM_PACKAGE_BETA_TAG ]]; then
              NPM_PACKAGE_TAG=$NPM_PACKAGE_BETA_TAG
              echo "发布beta"
          elif [[ $NPM_PACKAGE_VERSION =~ $NPM_PACKAGE_ALPHA_TAG ]]; then
              NPM_PACKAGE_TAG=$NPM_PACKAGE_ALPHA_TAG
              echo "发布alpha"
          else
              NPM_PACKAGE_TAG="latest"
              echo "发布latest"
          fi
          if [[ $(npm view "${NPM_PACKAGE_NAME}" versions) != *"'${NPM_PACKAGE_VERSION}'"* ]]; then
            npm publish --access public --tag ${NPM_PACKAGE_TAG}
            echo "Successfully published version ${NPM_PACKAGE_VERSION} of ${NPM_PACKAGE_NAME} to GitLab's NPM registry: ${CI_PROJECT_URL}/-/packages"
            curl -X PUT https://registry-direct.npmmirror.com/-/package/${NPM_PACKAGE_NAME}/syncs
          else
            echo "Version ${NPM_PACKAGE_VERSION} of ${NPM_PACKAGE_NAME} has already been published, so no new version has been published."
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
